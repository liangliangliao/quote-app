name: Build Android APK (Flutter)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:

env:
  PROJECT_DIR: project  # 若工程在仓库根目录，请改成 '.'

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter 3.22.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'

      - name: Write local.properties
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          printf "sdk.dir=%s\n" "$ANDROID_SDK_ROOT" > android/local.properties
          printf "flutter.sdk=%s\n" "$FLUTTER_HOME" >> android/local.properties
          cat android/local.properties

      - name: Guards
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -eux
          ! grep -q 'flutter-plugin-loader' android/settings.gradle || (echo "Do not use plugin-loader in settings.gradle" && exit 1)
          ! grep -R "apply from: .*flutter\.gradle" android || (echo "Remove command-style flutter.gradle apply" && exit 1)
          ! test -f android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java || (echo "Remove GeneratedPluginRegistrant.java" && exit 1)
          ! test -f android/app/src/main/kotlin/io/flutter/plugins/GeneratedPluginRegistrant.kt || (echo "Remove GeneratedPluginRegistrant.kt" && exit 1)

      - name: Flutter clean & pub get
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter --version
          flutter clean
          flutter pub get

      - name: Build release APK (arm64 only)
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -euxo pipefail
          flutter build apk --release --target-platform=android-arm64 -v

      - name: Show APK outputs
        shell: bash
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "== build/app/outputs/flutter-apk =="
          ls -la build/app/outputs/flutter-apk || true
          echo "== android/app/build/outputs/flutter-apk =="
          ls -la android/app/build/outputs/flutter-apk || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            ${{ env.PROJECT_DIR }}/android/app/build/outputs/flutter-apk/app-arm64-v8a-release.apk
          if-no-files-found: warn
